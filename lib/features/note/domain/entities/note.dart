import 'package:notez/features/note/domain/entities/kind.dart';
import 'package:notez/features/note/domain/entities/location.dart';

/// A note entity in Notez.
class Note {
  Note({
    this.id,
    required this.title,
    this.content,
    required this.createdOn,
    required this.lastUpdated,
    required this.kind,
    this.todos,
    this.folder,
    required this.location,
  });

  /// Unique identity for each note object.
  ///
  /// Autogenerated and incremented with sqflite.
  /// Do not pass a value to the [id].
  /// Recommended uses of this property are:
  /// 1. Read values from it when it is not null.
  /// 2. [copyWith] to pass data specific to this id without accessing
  ///    it.

  final String? id;

  /// Title of a note.
  ///
  /// By default, it is given a name 'untitled note <x>' when a new
  /// note object is created.
  final String title;

  /// Content of a note.
  String? content;

  /// Exact time a [Note] was created.
  ///
  /// This value is set once throughout the life time of a [Note].
  /// It is set by default.
  /// Do not reassign it.
  final DateTime createdOn;

  /// Exact time a [Note] recieved its latest update.
  ///
  /// Should be set every time the [UpdateNote] use case is called.
  final DateTime lastUpdated;

  /// Kind of a note.
  ///
  /// Always a [Kind.note] object.
  /// This is set by default.
  /// Do not reassign it.
  final Kind kind;

  /// A list of ids to all todos that have a relation to a [Note].
  final List<int>? todos;

  /// Id of the [Folder] containig a [Note].
  final int? folder;

  /// Storage [Location] of a note.
  final Location location;
}
